# PARSE AND PUBLISH QUMULO AUDIT LOGS

# TCP connection for receiving audit logs
module(load="imtcp")
input(type="imtcp" port="514")

# To let rsyslog use standard input (to pass messages to an external 
# script that parses and performs custom processing on audit log data),
# load the omprog syslog module.
module(load="omprog")
module(load="mmjsonparse")

if ($app-name startswith "qumulo") then {
  action(type="mmjsonparse" cookie="")
  if ($!operation == "fs_write_data" or
      $!operation == "fs_write_metadata" or
      $!operation == "fs_create_file" or
      $!operation == "fs_create_directory" or
      $!operation == "fs_read_data" or
      $!operation == "fs_rename" or
      $!operation == "fs_delete") then {
    if ($!protocol == "smb2") then {
      # action(type="omfile" file="/var/log/qumulo_audit.log")
      action(
      # Invoke the omprog module
      type="omprog" 
      name="QumuloLog"
    
      # The full path and any CLI parameters for the external script
      binary="/opt/qumulo/QumuloBroker/events/Broker"
         
      # The queue type to use
      queue.type="LinkedList"

      # The maximum queue size (100,000 messages)
      # Tip: To configure rsyslog to communicate with multiple Qumulo 
      #      clusters, set this value to 200,000.
      queue.size="100000"
            
      # When enabled, the system saves data while shutting down
      queue.saveOnShutdown="on"

      # The maximum number of worker threads that can run in parallel
      # Tip: To configure rsyslog to communicate with multiple Qumulo
      #      clusters, set this value to 16.
      queue.workerThreads="8"

      # The number of messages that a worker thread processes before 
      # rsyslog creates another worker thread. For example, if you set 
      # queue.workerThreads to 200 and there are 201 messages in the 
      # queue, rsyslog creates a second worker thread.
      # Note: The queue.workerThreads parameter limits the maximum 
      #       value of the queue.size parameter.
      queue.workerThreadMinimumMessages="10000"
    
      # The interval after which the system retries the action, 30
      # seconds by default. If multiple retries fail, in order to prevent
      # the excessive resource use, the system extends the interval
      # automatically by using a specific formula.
      # Note: The suspension interval increases as the number of
      #       retries increases.
      action.resumeInterval="10"
            
      # The location where the system stores the output of the
      # publisher script for system troubleshooting.
      output="/var/log/qumulo_broker.log"
      )
      stop
    }
  }
} else
  action(type="omfile" file="/dev/null")
